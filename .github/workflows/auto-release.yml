name: Auto Release

on:
  push:
    tags: "v*"                              # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        otp: ['23.1']
        elixir: ['1.10.4']

    steps:

    - name: Checkout Branchs
      uses: actions/checkout@v2

    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        otp-version: ${{matrix.otp}}        # Define the OTP version [required]
        elixir-version: ${{matrix.elixir}}  # Define the elixir version [required]

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies and Run tests
      run: |
        export MIX_ENV=prod
        mix local.hex --force
        mix deps.get
        mix test

    - name: Compile
      run: mix release

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./_build/prod/rel/fika/bin/fika
        asset_name: fika-${{ steps.create_release.outputs.tag }}
        asset_content_type: application/octet-stream
